name: Docker image build and publish

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: Tag to apply to images.
        type: string
        default: snapshot-artifact
      ecr_repo:
        description: ECR repo
        default: "economins"
        type: string
      aws_account_id:
        description: AWS Account ID
        type: string
      aws_region:
        description: Target AWS Region
        default: "ap-northeast-2"
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    outputs:
      image_tag: ${{ steps.build-publish.outputs.image_tag }}
      full_image: ${{ steps.build-publish.outputs.full_image }}

    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/economins-github-actions-role
          aws-region: ${{ inputs.aws_region }}
          
      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        id: build-publish
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: ${{ inputs.ecr_repo }}
          REPOSITORY: ${{ inputs.ecr_repo }}
          IMAGE_TAG: ${{ inputs.image_tag }}
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
          echo "image_tag=$IMAGE_TAG" 
          echo "full_image=$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG"
